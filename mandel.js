// Generated by CoffeeScript 1.12.5
var Ctrl, Plotter, Zoomer, fetchUrlParams, initGlobals, makeUI, readFromUI, resetPosAndRender, setupControls, startRendering, updateCaption, writeToUI, zoomOutAndRender;

Plotter = null;

Zoomer = null;

Ctrl = null;

$(document).ready(function() {
  initGlobals();
  setupControls();
  fetchUrlParams();
  return startRendering();
});

initGlobals = function() {
  Plotter = new PlotState('#mandelplot_canvas');
  Zoomer = new ZoomSelection('#mandelplot_selection');
  return Ctrl = new Quickform('mandelplot', 'mandelplot_ui');
};

setupControls = function() {
  makeUI();
  writeToUI();
  return updateCaption();
};

makeUI = function() {
  Ctrl.numEntry('iter', "Iterations per pixel");
  Ctrl.numEntry('slice', "Pixels per Event:");
  Ctrl.gridSpacer();
  Ctrl.checkbox('cool', "   Reverse colors");
  Ctrl.checkbox('nohist', "Disable histogram coloring");
  Ctrl.checkbox('nosmooth', "Disable smoothing");
  Ctrl.gridSpacer();
  Ctrl.button('rbtn', "Render the selected region", "Render", startRendering);
  Ctrl.button('zbtn', "Zoom out by 50% and re-render", "Zoom Out", zoomOutAndRender);
  return Ctrl.button('rsbtn', "Reset zoom and re-render", "Reset", resetPosAndRender);
};

fetchUrlParams = function() {
  var hash;
  hash = $(location).attr('hash');
  if (hash === "") {
    return;
  }
  Plotter.setFromLink(hash);
  return writeToUI();
};

updateCaption = function() {
  var baseUrl;
  $('#mandelplot_region').text(Plotter.desc());
  baseUrl = $(location).attr('href').replace(/\#.*/, "");
  return $('#mandelplot_link').attr('href', baseUrl + "#" + (Plotter.link()));
};

writeToUI = function() {
  Ctrl.val('iter', Plotter.iter);
  Ctrl.val('slice', Plotter.slice);
  Ctrl.val('cool', Plotter.reverseColor);
  Ctrl.val('nohist', !Plotter.histColor);
  return Ctrl.val('nosmooth', !Plotter.smoothing);
};

readFromUI = function() {
  var iter, slice;
  iter = parseInt(Ctrl.val('iter'));
  if (iter >= 1) {
    Plotter.iter = iter;
  }
  slice = parseInt(Ctrl.val('slice'));
  if (slice >= 1) {
    Plotter.slice = slice;
  }
  Plotter.reverseColor = Ctrl.val('cool');
  Plotter.histColor = !Ctrl.val('nohist');
  return Plotter.smoothing = !Ctrl.val('nosmooth');
};

startRendering = function() {
  var ref, x, y;
  if (Zoomer.hasSelection()) {
    ref = Zoomer.topleft, x = ref[0], y = ref[1];
    Plotter.setRenderRect(x, y, Zoomer.width);
    Zoomer.clearSelection();
  }
  readFromUI();
  writeToUI();
  updateCaption();
  return Plotter.startRender();
};

zoomOutAndRender = function() {
  Zoomer.clearSelection();
  Plotter.zoom(1.5);
  return startRendering();
};

resetPosAndRender = function() {
  Zoomer.clearSelection();
  Plotter.reset();
  return startRendering();
};
