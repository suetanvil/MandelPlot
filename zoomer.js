// Generated by CoffeeScript 1.12.5
var ZoomSelection;

ZoomSelection = (function() {
  ZoomSelection.prototype.topleft = null;

  ZoomSelection.prototype.width = null;

  ZoomSelection.prototype.hasSelection = function() {
    return (this.topleft != null) && (this.width != null) && this.width > 0;
  };

  function ZoomSelection(canvas_id) {
    var canvas, clearZoomRect, ctx, drawRect, isInRect, ratio, relPos, setWidth;
    canvas = $(canvas_id).get(0);
    ctx = canvas.getContext("2d");
    ratio = canvas.height / canvas.width;
    clearZoomRect = (function(_this) {
      return function() {
        return ctx.clearRect(0, 0, canvas.width, canvas.height);
      };
    })(this);
    this.clearSelection = (function(_this) {
      return function() {
        clearZoomRect();
        _this.topleft = null;
        return _this.width = null;
      };
    })(this);
    drawRect = (function(_this) {
      return function() {
        var ref, x, y;
        if ((_this.width == null) || _this.width < 0 || !_this.topleft) {
          return;
        }
        ref = _this.topleft, x = ref[0], y = ref[1];
        ctx.strokeStyle = '#FF0000';
        return ctx.strokeRect(x, y, _this.width, _this.width * ratio);
      };
    })(this);
    relPos = (function(_this) {
      return function(x, y) {
        var oo;
        oo = $(canvas).offset();
        return [x - oo.left, y - oo.top];
      };
    })(this);
    isInRect = (function(_this) {
      return function(x, y) {
        var ref, rx, ry;
        ref = relPos(x, y), rx = ref[0], ry = ref[1];
        if (rx < 0 || ry < 0 || rx >= canvas.width || ry >= canvas.height) {
          return false;
        }
        return true;
      };
    })(this);
    setWidth = (function(_this) {
      return function(evt) {
        var ref, x, y;
        if (_this.topleft == null) {
          return;
        }
        ref = relPos(evt.pageX, evt.pageY), x = ref[0], y = ref[1];
        return _this.width = x - _this.topleft[0];
      };
    })(this);
    $(document).mousedown((function(_this) {
      return function(evt) {
        if (!isInRect(evt.pageX, evt.pageY)) {
          return;
        }
        _this.topleft = relPos(evt.pageX, evt.pageY);
        _this.width = 0;
        clearZoomRect();
        return $(document).mousemove(function(evt) {
          setWidth(evt);
          clearZoomRect();
          return drawRect();
        });
      };
    })(this));
    $(document).mouseup((function(_this) {
      return function(evt) {
        $(document).unbind('mousemove');
        if (!isInRect(evt.pageX, evt.pageY)) {
          return;
        }
        setWidth(evt);
        if (!_this.hasSelection()) {
          return clearZoomRect();
        }
      };
    })(this));
  }

  return ZoomSelection;

})();
